// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace TransferObjects
{

using global::System;
using global::FlatBuffers;

public struct PlayerLogin : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerLogin GetRootAsPlayerLogin(ByteBuffer _bb) { return GetRootAsPlayerLogin(_bb, new PlayerLogin()); }
  public static PlayerLogin GetRootAsPlayerLogin(ByteBuffer _bb, PlayerLogin obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool PlayerLoginBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "PLOG"); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerLogin __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Username { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetUsernameBytes() { return __p.__vector_as_arraysegment(4); }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }
  public bool Success { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<PlayerLogin> CreatePlayerLogin(FlatBufferBuilder builder,
      StringOffset usernameOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset),
      bool success = false) {
    builder.StartObject(3);
    PlayerLogin.AddPassword(builder, passwordOffset);
    PlayerLogin.AddUsername(builder, usernameOffset);
    PlayerLogin.AddSuccess(builder, success);
    return PlayerLogin.EndPlayerLogin(builder);
  }

  public static void StartPlayerLogin(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddUsername(FlatBufferBuilder builder, StringOffset usernameOffset) { builder.AddOffset(0, usernameOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static void AddSuccess(FlatBufferBuilder builder, bool success) { builder.AddBool(2, success, false); }
  public static Offset<PlayerLogin> EndPlayerLogin(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerLogin>(o);
  }
  public static void FinishPlayerLoginBuffer(FlatBufferBuilder builder, Offset<PlayerLogin> offset) { builder.Finish(offset.Value, "PLOG"); }
};


}
